import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages firewall options on the cluster level.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@muhlba91/pulumi-proxmoxve";
 *
 * const example = new proxmoxve.network.Firewall("example", {
 *     ebtables: false,
 *     enabled: false,
 *     inputPolicy: "DROP",
 *     logRatelimit: {
 *         burst: 10,
 *         enabled: false,
 *         rate: "5/second",
 *     },
 *     outputPolicy: "ACCEPT",
 * });
 * ```
 *
 * ## Important Notes
 *
 * Be careful not to use this resource multiple times for the same node.
 *
 * ## Import
 *
 * Instances can be imported without an ID, but you still need to pass one, e.g.,
 *
 * bash
 *
 * ```sh
 * $ pulumi import proxmoxve:Network/firewall:Firewall example example
 * ```
 */
export declare class Firewall extends pulumi.CustomResource {
    /**
     * Get an existing Firewall resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallState, opts?: pulumi.CustomResourceOptions): Firewall;
    /**
     * Returns true if the given object is an instance of Firewall.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Firewall;
    /**
     * Enable ebtables rules cluster wide.
     */
    readonly ebtables: pulumi.Output<boolean | undefined>;
    /**
     * Enable or disable the firewall cluster wide.
     */
    readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * The default input policy (`ACCEPT`, `DROP`, `REJECT`).
     */
    readonly inputPolicy: pulumi.Output<string | undefined>;
    /**
     * The log rate limit.
     */
    readonly logRatelimit: pulumi.Output<outputs.Network.FirewallLogRatelimit | undefined>;
    /**
     * The default output policy (`ACCEPT`, `DROP`, `REJECT`).
     */
    readonly outputPolicy: pulumi.Output<string | undefined>;
    /**
     * Create a Firewall resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FirewallArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Firewall resources.
 */
export interface FirewallState {
    /**
     * Enable ebtables rules cluster wide.
     */
    ebtables?: pulumi.Input<boolean>;
    /**
     * Enable or disable the firewall cluster wide.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The default input policy (`ACCEPT`, `DROP`, `REJECT`).
     */
    inputPolicy?: pulumi.Input<string>;
    /**
     * The log rate limit.
     */
    logRatelimit?: pulumi.Input<inputs.Network.FirewallLogRatelimit>;
    /**
     * The default output policy (`ACCEPT`, `DROP`, `REJECT`).
     */
    outputPolicy?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Firewall resource.
 */
export interface FirewallArgs {
    /**
     * Enable ebtables rules cluster wide.
     */
    ebtables?: pulumi.Input<boolean>;
    /**
     * Enable or disable the firewall cluster wide.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The default input policy (`ACCEPT`, `DROP`, `REJECT`).
     */
    inputPolicy?: pulumi.Input<string>;
    /**
     * The log rate limit.
     */
    logRatelimit?: pulumi.Input<inputs.Network.FirewallLogRatelimit>;
    /**
     * The default output policy (`ACCEPT`, `DROP`, `REJECT`).
     */
    outputPolicy?: pulumi.Input<string>;
}
