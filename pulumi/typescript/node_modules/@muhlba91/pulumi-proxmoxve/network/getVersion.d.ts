import * as pulumi from "@pulumi/pulumi";
/**
 * Retrieves API version details.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const example = proxmoxve.Network.getVersion({});
 * export const dataProxmoxVirtualEnvironmentVersion = {
 *     release: example.then(example => example.release),
 *     repository_id: example.then(example => example.repositoryId),
 *     version: example.then(example => example.version),
 * };
 * ```
 */
export declare function getVersion(opts?: pulumi.InvokeOptions): Promise<GetVersionResult>;
/**
 * A collection of values returned by getVersion.
 */
export interface GetVersionResult {
    /**
     * Placeholder identifier attribute.
     */
    readonly id: string;
    /**
     * The current Proxmox VE point release in `x.y` format.
     */
    readonly release: string;
    /**
     * The short git revision from which this version was build.
     */
    readonly repositoryId: string;
    /**
     * The full pve-manager package version of this node.
     */
    readonly version: string;
}
/**
 * Retrieves API version details.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const example = proxmoxve.Network.getVersion({});
 * export const dataProxmoxVirtualEnvironmentVersion = {
 *     release: example.then(example => example.release),
 *     repository_id: example.then(example => example.repositoryId),
 *     version: example.then(example => example.version),
 * };
 * ```
 */
export declare function getVersionOutput(opts?: pulumi.InvokeOptions): pulumi.Output<GetVersionResult>;
