import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Linux VLAN network interface in a Proxmox VE node.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@muhlba91/pulumi-proxmoxve";
 *
 * // using VLAN tag
 * const vlan99 = new proxmoxve.network.NetworkVlan("vlan99", {
 *     comment: "VLAN 99",
 *     nodeName: "pve",
 * });
 * // using custom network interface name
 * const vlan98 = new proxmoxve.network.NetworkVlan("vlan98", {
 *     comment: "VLAN 98",
 *     "interface": "eno0",
 *     nodeName: "pve",
 *     vlan: 98,
 * });
 * ```
 *
 * ## Import
 *
 * #!/usr/bin/env sh
 *
 * #Interfaces can be imported using the `node_name:iface` format, e.g.
 *
 * ```sh
 * $ pulumi import proxmoxve:Network/networkVlan:NetworkVlan vlan99 pve:vlan99
 * ```
 */
export declare class NetworkVlan extends pulumi.CustomResource {
    /**
     * Get an existing NetworkVlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkVlanState, opts?: pulumi.CustomResourceOptions): NetworkVlan;
    /**
     * Returns true if the given object is an instance of NetworkVlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NetworkVlan;
    /**
     * The interface IPv4/CIDR address.
     */
    readonly address: pulumi.Output<string | undefined>;
    /**
     * The interface IPv6/CIDR address.
     */
    readonly address6: pulumi.Output<string | undefined>;
    /**
     * Automatically start interface on boot (defaults to `true`).
     */
    readonly autostart: pulumi.Output<boolean>;
    /**
     * Comment for the interface.
     */
    readonly comment: pulumi.Output<string | undefined>;
    /**
     * Default gateway address.
     */
    readonly gateway: pulumi.Output<string | undefined>;
    /**
     * Default IPv6 gateway address.
     */
    readonly gateway6: pulumi.Output<string | undefined>;
    /**
     * The VLAN raw device. See also `name`.
     */
    readonly interface: pulumi.Output<string>;
    /**
     * The interface MTU.
     */
    readonly mtu: pulumi.Output<number | undefined>;
    /**
     * The interface name. Either add the VLAN tag number to an existing interface name, e.g. `ens18.21` (and do not set `interface` and `vlan`), or use custom name, e.g. `vlanLab` (`interface` and `vlan` are then required).
     */
    readonly name: pulumi.Output<string>;
    /**
     * The name of the node.
     */
    readonly nodeName: pulumi.Output<string>;
    /**
     * The VLAN tag. See also `name`.
     */
    readonly vlan: pulumi.Output<number>;
    /**
     * Create a NetworkVlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkVlanArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering NetworkVlan resources.
 */
export interface NetworkVlanState {
    /**
     * The interface IPv4/CIDR address.
     */
    address?: pulumi.Input<string>;
    /**
     * The interface IPv6/CIDR address.
     */
    address6?: pulumi.Input<string>;
    /**
     * Automatically start interface on boot (defaults to `true`).
     */
    autostart?: pulumi.Input<boolean>;
    /**
     * Comment for the interface.
     */
    comment?: pulumi.Input<string>;
    /**
     * Default gateway address.
     */
    gateway?: pulumi.Input<string>;
    /**
     * Default IPv6 gateway address.
     */
    gateway6?: pulumi.Input<string>;
    /**
     * The VLAN raw device. See also `name`.
     */
    interface?: pulumi.Input<string>;
    /**
     * The interface MTU.
     */
    mtu?: pulumi.Input<number>;
    /**
     * The interface name. Either add the VLAN tag number to an existing interface name, e.g. `ens18.21` (and do not set `interface` and `vlan`), or use custom name, e.g. `vlanLab` (`interface` and `vlan` are then required).
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the node.
     */
    nodeName?: pulumi.Input<string>;
    /**
     * The VLAN tag. See also `name`.
     */
    vlan?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a NetworkVlan resource.
 */
export interface NetworkVlanArgs {
    /**
     * The interface IPv4/CIDR address.
     */
    address?: pulumi.Input<string>;
    /**
     * The interface IPv6/CIDR address.
     */
    address6?: pulumi.Input<string>;
    /**
     * Automatically start interface on boot (defaults to `true`).
     */
    autostart?: pulumi.Input<boolean>;
    /**
     * Comment for the interface.
     */
    comment?: pulumi.Input<string>;
    /**
     * Default gateway address.
     */
    gateway?: pulumi.Input<string>;
    /**
     * Default IPv6 gateway address.
     */
    gateway6?: pulumi.Input<string>;
    /**
     * The VLAN raw device. See also `name`.
     */
    interface?: pulumi.Input<string>;
    /**
     * The interface MTU.
     */
    mtu?: pulumi.Input<number>;
    /**
     * The interface name. Either add the VLAN tag number to an existing interface name, e.g. `ens18.21` (and do not set `interface` and `vlan`), or use custom name, e.g. `vlanLab` (`interface` and `vlan` are then required).
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the node.
     */
    nodeName: pulumi.Input<string>;
    /**
     * The VLAN tag. See also `name`.
     */
    vlan?: pulumi.Input<number>;
}
