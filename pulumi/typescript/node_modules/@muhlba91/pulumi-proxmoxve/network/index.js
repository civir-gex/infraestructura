"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.NetworkVlan = exports.NetworkBridge = exports.getVersionOutput = exports.getVersion = exports.getTimeOutput = exports.getTime = exports.getHostsOutput = exports.getHosts = exports.getDNSOutput = exports.getDNS = exports.FirewallSecurityGroup = exports.FirewallRules = exports.FirewallOptions = exports.FirewallIPSet = exports.FirewallAlias = exports.Firewall = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Firewall = null;
utilities.lazyLoad(exports, ["Firewall"], () => require("./firewall"));
exports.FirewallAlias = null;
utilities.lazyLoad(exports, ["FirewallAlias"], () => require("./firewallAlias"));
exports.FirewallIPSet = null;
utilities.lazyLoad(exports, ["FirewallIPSet"], () => require("./firewallIPSet"));
exports.FirewallOptions = null;
utilities.lazyLoad(exports, ["FirewallOptions"], () => require("./firewallOptions"));
exports.FirewallRules = null;
utilities.lazyLoad(exports, ["FirewallRules"], () => require("./firewallRules"));
exports.FirewallSecurityGroup = null;
utilities.lazyLoad(exports, ["FirewallSecurityGroup"], () => require("./firewallSecurityGroup"));
exports.getDNS = null;
exports.getDNSOutput = null;
utilities.lazyLoad(exports, ["getDNS", "getDNSOutput"], () => require("./getDNS"));
exports.getHosts = null;
exports.getHostsOutput = null;
utilities.lazyLoad(exports, ["getHosts", "getHostsOutput"], () => require("./getHosts"));
exports.getTime = null;
exports.getTimeOutput = null;
utilities.lazyLoad(exports, ["getTime", "getTimeOutput"], () => require("./getTime"));
exports.getVersion = null;
exports.getVersionOutput = null;
utilities.lazyLoad(exports, ["getVersion", "getVersionOutput"], () => require("./getVersion"));
exports.NetworkBridge = null;
utilities.lazyLoad(exports, ["NetworkBridge"], () => require("./networkBridge"));
exports.NetworkVlan = null;
utilities.lazyLoad(exports, ["NetworkVlan"], () => require("./networkVlan"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "proxmoxve:Network/firewall:Firewall":
                return new exports.Firewall(name, undefined, { urn });
            case "proxmoxve:Network/firewallAlias:FirewallAlias":
                return new exports.FirewallAlias(name, undefined, { urn });
            case "proxmoxve:Network/firewallIPSet:FirewallIPSet":
                return new exports.FirewallIPSet(name, undefined, { urn });
            case "proxmoxve:Network/firewallOptions:FirewallOptions":
                return new exports.FirewallOptions(name, undefined, { urn });
            case "proxmoxve:Network/firewallRules:FirewallRules":
                return new exports.FirewallRules(name, undefined, { urn });
            case "proxmoxve:Network/firewallSecurityGroup:FirewallSecurityGroup":
                return new exports.FirewallSecurityGroup(name, undefined, { urn });
            case "proxmoxve:Network/networkBridge:NetworkBridge":
                return new exports.NetworkBridge(name, undefined, { urn });
            case "proxmoxve:Network/networkVlan:NetworkVlan":
                return new exports.NetworkVlan(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("proxmoxve", "Network/firewall", _module);
pulumi.runtime.registerResourceModule("proxmoxve", "Network/firewallAlias", _module);
pulumi.runtime.registerResourceModule("proxmoxve", "Network/firewallIPSet", _module);
pulumi.runtime.registerResourceModule("proxmoxve", "Network/firewallOptions", _module);
pulumi.runtime.registerResourceModule("proxmoxve", "Network/firewallRules", _module);
pulumi.runtime.registerResourceModule("proxmoxve", "Network/firewallSecurityGroup", _module);
pulumi.runtime.registerResourceModule("proxmoxve", "Network/networkBridge", _module);
pulumi.runtime.registerResourceModule("proxmoxve", "Network/networkVlan", _module);
//# sourceMappingURL=index.js.map