import * as pulumi from "@pulumi/pulumi";
/**
 * Aliases are used to see what devices or group of devices are affected by a rule.
 * We can create aliases to identify an IP address or a network. Aliases can be
 * created on the cluster level, on VM / Container level.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@muhlba91/pulumi-proxmoxve";
 *
 * const localNetwork = new proxmoxve.network.FirewallAlias("localNetwork", {
 *     nodeName: proxmox_virtual_environment_vm.example.node_name,
 *     vmId: proxmox_virtual_environment_vm.example.vm_id,
 *     cidr: "192.168.0.0/23",
 *     comment: "Managed by Terraform",
 * }, {
 *     dependsOn: [proxmox_virtual_environment_vm.example],
 * });
 * const ubuntuVm = new proxmoxve.network.FirewallAlias("ubuntuVm", {
 *     cidr: "192.168.0.1",
 *     comment: "Managed by Terraform",
 * });
 * ```
 */
export declare class FirewallAlias extends pulumi.CustomResource {
    /**
     * Get an existing FirewallAlias resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallAliasState, opts?: pulumi.CustomResourceOptions): FirewallAlias;
    /**
     * Returns true if the given object is an instance of FirewallAlias.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FirewallAlias;
    /**
     * Network/IP specification in CIDR format.
     */
    readonly cidr: pulumi.Output<string>;
    /**
     * Alias comment.
     */
    readonly comment: pulumi.Output<string | undefined>;
    /**
     * Container ID. Leave empty for cluster level aliases.
     */
    readonly containerId: pulumi.Output<number | undefined>;
    /**
     * Alias name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Node name. Leave empty for cluster level aliases.
     */
    readonly nodeName: pulumi.Output<string | undefined>;
    /**
     * VM ID. Leave empty for cluster level aliases.
     */
    readonly vmId: pulumi.Output<number | undefined>;
    /**
     * Create a FirewallAlias resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallAliasArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering FirewallAlias resources.
 */
export interface FirewallAliasState {
    /**
     * Network/IP specification in CIDR format.
     */
    cidr?: pulumi.Input<string>;
    /**
     * Alias comment.
     */
    comment?: pulumi.Input<string>;
    /**
     * Container ID. Leave empty for cluster level aliases.
     */
    containerId?: pulumi.Input<number>;
    /**
     * Alias name.
     */
    name?: pulumi.Input<string>;
    /**
     * Node name. Leave empty for cluster level aliases.
     */
    nodeName?: pulumi.Input<string>;
    /**
     * VM ID. Leave empty for cluster level aliases.
     */
    vmId?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a FirewallAlias resource.
 */
export interface FirewallAliasArgs {
    /**
     * Network/IP specification in CIDR format.
     */
    cidr: pulumi.Input<string>;
    /**
     * Alias comment.
     */
    comment?: pulumi.Input<string>;
    /**
     * Container ID. Leave empty for cluster level aliases.
     */
    containerId?: pulumi.Input<number>;
    /**
     * Alias name.
     */
    name?: pulumi.Input<string>;
    /**
     * Node name. Leave empty for cluster level aliases.
     */
    nodeName?: pulumi.Input<string>;
    /**
     * VM ID. Leave empty for cluster level aliases.
     */
    vmId?: pulumi.Input<number>;
}
