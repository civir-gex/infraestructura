import * as pulumi from "@pulumi/pulumi";
/**
 * Manages the time for a specific node.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@muhlba91/pulumi-proxmoxve";
 *
 * const firstNodeTime = new proxmoxve.Time("firstNodeTime", {
 *     nodeName: "first-node",
 *     timeZone: "UTC",
 * });
 * ```
 *
 * ## Import
 *
 * Instances can be imported using the `node_name`, e.g.,
 *
 * bash
 *
 * ```sh
 * $ pulumi import proxmoxve:index/time:Time first_node first-node
 * ```
 */
export declare class Time extends pulumi.CustomResource {
    /**
     * Get an existing Time resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TimeState, opts?: pulumi.CustomResourceOptions): Time;
    /**
     * Returns true if the given object is an instance of Time.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Time;
    /**
     * The node's local time.
     */
    readonly localTime: pulumi.Output<string>;
    /**
     * A node name.
     */
    readonly nodeName: pulumi.Output<string>;
    /**
     * The node's time zone.
     */
    readonly timeZone: pulumi.Output<string>;
    /**
     * The node's local time formatted as UTC.
     */
    readonly utcTime: pulumi.Output<string>;
    /**
     * Create a Time resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TimeArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Time resources.
 */
export interface TimeState {
    /**
     * The node's local time.
     */
    localTime?: pulumi.Input<string>;
    /**
     * A node name.
     */
    nodeName?: pulumi.Input<string>;
    /**
     * The node's time zone.
     */
    timeZone?: pulumi.Input<string>;
    /**
     * The node's local time formatted as UTC.
     */
    utcTime?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Time resource.
 */
export interface TimeArgs {
    /**
     * A node name.
     */
    nodeName: pulumi.Input<string>;
    /**
     * The node's time zone.
     */
    timeZone: pulumi.Input<string>;
}
