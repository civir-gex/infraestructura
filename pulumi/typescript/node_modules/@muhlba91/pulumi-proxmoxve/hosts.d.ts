import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Manages the host entries on a specific node.
 *
 * ## Import
 *
 * Instances can be imported using the `node_name`, e.g.,
 *
 * bash
 *
 * ```sh
 * $ pulumi import proxmoxve:index/hosts:Hosts first_node_host_entries first-node
 * ```
 */
export declare class Hosts extends pulumi.CustomResource {
    /**
     * Get an existing Hosts resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HostsState, opts?: pulumi.CustomResourceOptions): Hosts;
    /**
     * Returns true if the given object is an instance of Hosts.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Hosts;
    /**
     * The IP addresses.
     */
    readonly addresses: pulumi.Output<string[]>;
    /**
     * The SHA1 digest.
     */
    readonly digest: pulumi.Output<string>;
    /**
     * The host entries (conversion of `addresses` and `hostnames` into
     * objects).
     */
    readonly entries: pulumi.Output<outputs.HostsEntry[]>;
    /**
     * A host entry (multiple blocks supported).
     */
    readonly entry: pulumi.Output<outputs.HostsEntry[]>;
    /**
     * The hostnames associated with each of the IP addresses.
     */
    readonly hostnames: pulumi.Output<string[][]>;
    /**
     * A node name.
     */
    readonly nodeName: pulumi.Output<string>;
    /**
     * Create a Hosts resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HostsArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Hosts resources.
 */
export interface HostsState {
    /**
     * The IP addresses.
     */
    addresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The SHA1 digest.
     */
    digest?: pulumi.Input<string>;
    /**
     * The host entries (conversion of `addresses` and `hostnames` into
     * objects).
     */
    entries?: pulumi.Input<pulumi.Input<inputs.HostsEntry>[]>;
    /**
     * A host entry (multiple blocks supported).
     */
    entry?: pulumi.Input<pulumi.Input<inputs.HostsEntry>[]>;
    /**
     * The hostnames associated with each of the IP addresses.
     */
    hostnames?: pulumi.Input<pulumi.Input<pulumi.Input<string>[]>[]>;
    /**
     * A node name.
     */
    nodeName?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Hosts resource.
 */
export interface HostsArgs {
    /**
     * A host entry (multiple blocks supported).
     */
    entry: pulumi.Input<pulumi.Input<inputs.HostsEntry>[]>;
    /**
     * A node name.
     */
    nodeName: pulumi.Input<string>;
}
