"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getVm2Output = exports.getVm2 = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * !> **DO NOT USE**
 * This is an experimental implementation of a Proxmox VM datasource using Plugin Framework.
 */
function getVm2(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("proxmoxve:index/getVm2:getVm2", {
        "clone": args.clone,
        "cpu": args.cpu,
        "description": args.description,
        "id": args.id,
        "name": args.name,
        "nodeName": args.nodeName,
        "tags": args.tags,
        "template": args.template,
        "timeouts": args.timeouts,
        "vga": args.vga,
    }, opts);
}
exports.getVm2 = getVm2;
/**
 * !> **DO NOT USE**
 * This is an experimental implementation of a Proxmox VM datasource using Plugin Framework.
 */
function getVm2Output(args, opts) {
    return pulumi.output(args).apply((a) => getVm2(a, opts));
}
exports.getVm2Output = getVm2Output;
//# sourceMappingURL=getVm2.js.map