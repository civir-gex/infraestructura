import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Manages a PCI hardware mapping in a Proxmox VE cluster.
 *
 * ## Import
 *
 * #!/usr/bin/env sh
 *
 * A PCI hardware mapping can be imported using their name, e.g.:
 *
 * ```sh
 * $ pulumi import proxmoxve:Hardware/mapping/pci:Pci example example
 * ```
 */
export declare class Pci extends pulumi.CustomResource {
    /**
     * Get an existing Pci resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PciState, opts?: pulumi.CustomResourceOptions): Pci;
    /**
     * Returns true if the given object is an instance of Pci.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Pci;
    /**
     * The comment of this PCI hardware mapping.
     */
    readonly comment: pulumi.Output<string | undefined>;
    /**
     * The actual map of devices for the PCI hardware mapping.
     */
    readonly maps: pulumi.Output<outputs.Hardware.mapping.PciMap[]>;
    /**
     * Indicates whether to enable mediated devices.
     */
    readonly mediatedDevices: pulumi.Output<boolean>;
    /**
     * The name of this PCI hardware mapping.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a Pci resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PciArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Pci resources.
 */
export interface PciState {
    /**
     * The comment of this PCI hardware mapping.
     */
    comment?: pulumi.Input<string>;
    /**
     * The actual map of devices for the PCI hardware mapping.
     */
    maps?: pulumi.Input<pulumi.Input<inputs.Hardware.mapping.PciMap>[]>;
    /**
     * Indicates whether to enable mediated devices.
     */
    mediatedDevices?: pulumi.Input<boolean>;
    /**
     * The name of this PCI hardware mapping.
     */
    name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Pci resource.
 */
export interface PciArgs {
    /**
     * The comment of this PCI hardware mapping.
     */
    comment?: pulumi.Input<string>;
    /**
     * The actual map of devices for the PCI hardware mapping.
     */
    maps: pulumi.Input<pulumi.Input<inputs.Hardware.mapping.PciMap>[]>;
    /**
     * Indicates whether to enable mediated devices.
     */
    mediatedDevices?: pulumi.Input<boolean>;
    /**
     * The name of this PCI hardware mapping.
     */
    name?: pulumi.Input<string>;
}
