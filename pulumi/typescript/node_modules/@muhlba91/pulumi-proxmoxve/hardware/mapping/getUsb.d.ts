import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Retrieves a USB hardware mapping from a Proxmox VE cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const example = proxmoxve.Hardware.mapping.getUsb({
 *     name: "example",
 * });
 * export const dataProxmoxVirtualEnvironmentHardwareMappingUsb = example;
 * ```
 */
export declare function getUsb(args: GetUsbArgs, opts?: pulumi.InvokeOptions): Promise<GetUsbResult>;
/**
 * A collection of arguments for invoking getUsb.
 */
export interface GetUsbArgs {
    /**
     * The name of this USB hardware mapping.
     */
    name: string;
}
/**
 * A collection of values returned by getUsb.
 */
export interface GetUsbResult {
    /**
     * The comment of this USB hardware mapping.
     */
    readonly comment: string;
    /**
     * The unique identifier of this USB hardware mapping data source.
     */
    readonly id: string;
    /**
     * The actual map of devices for the hardware mapping.
     */
    readonly maps: outputs.Hardware.mapping.GetUsbMap[];
    /**
     * The name of this USB hardware mapping.
     */
    readonly name: string;
}
/**
 * Retrieves a USB hardware mapping from a Proxmox VE cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const example = proxmoxve.Hardware.mapping.getUsb({
 *     name: "example",
 * });
 * export const dataProxmoxVirtualEnvironmentHardwareMappingUsb = example;
 * ```
 */
export declare function getUsbOutput(args: GetUsbOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUsbResult>;
/**
 * A collection of arguments for invoking getUsb.
 */
export interface GetUsbOutputArgs {
    /**
     * The name of this USB hardware mapping.
     */
    name: pulumi.Input<string>;
}
