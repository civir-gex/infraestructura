import * as pulumi from "@pulumi/pulumi";
/**
 * Manages the custom SSL/TLS certificate for a specific node.
 */
export declare class Certifi extends pulumi.CustomResource {
    /**
     * Get an existing Certifi resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CertifiState, opts?: pulumi.CustomResourceOptions): Certifi;
    /**
     * Returns true if the given object is an instance of Certifi.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Certifi;
    /**
     * The PEM encoded certificate.
     */
    readonly certificate: pulumi.Output<string>;
    /**
     * The PEM encoded certificate chain.
     */
    readonly certificateChain: pulumi.Output<string | undefined>;
    /**
     * The expiration date (RFC 3339).
     */
    readonly expirationDate: pulumi.Output<string>;
    /**
     * The file name.
     */
    readonly fileName: pulumi.Output<string>;
    /**
     * The issuer.
     */
    readonly issuer: pulumi.Output<string>;
    /**
     * A node name.
     */
    readonly nodeName: pulumi.Output<string>;
    /**
     * Whether to overwrite an existing certificate
     */
    readonly overwrite: pulumi.Output<boolean | undefined>;
    /**
     * The PEM encoded private key.
     */
    readonly privateKey: pulumi.Output<string>;
    /**
     * The public key size.
     */
    readonly publicKeySize: pulumi.Output<number>;
    /**
     * The public key type.
     */
    readonly publicKeyType: pulumi.Output<string>;
    /**
     * The SSL fingerprint.
     */
    readonly sslFingerprint: pulumi.Output<string>;
    /**
     * The start date (RFC 3339).
     */
    readonly startDate: pulumi.Output<string>;
    /**
     * The subject.
     */
    readonly subject: pulumi.Output<string>;
    /**
     * The subject alternative names.
     */
    readonly subjectAlternativeNames: pulumi.Output<string[]>;
    /**
     * Create a Certifi resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CertifiArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Certifi resources.
 */
export interface CertifiState {
    /**
     * The PEM encoded certificate.
     */
    certificate?: pulumi.Input<string>;
    /**
     * The PEM encoded certificate chain.
     */
    certificateChain?: pulumi.Input<string>;
    /**
     * The expiration date (RFC 3339).
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * The file name.
     */
    fileName?: pulumi.Input<string>;
    /**
     * The issuer.
     */
    issuer?: pulumi.Input<string>;
    /**
     * A node name.
     */
    nodeName?: pulumi.Input<string>;
    /**
     * Whether to overwrite an existing certificate
     */
    overwrite?: pulumi.Input<boolean>;
    /**
     * The PEM encoded private key.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * The public key size.
     */
    publicKeySize?: pulumi.Input<number>;
    /**
     * The public key type.
     */
    publicKeyType?: pulumi.Input<string>;
    /**
     * The SSL fingerprint.
     */
    sslFingerprint?: pulumi.Input<string>;
    /**
     * The start date (RFC 3339).
     */
    startDate?: pulumi.Input<string>;
    /**
     * The subject.
     */
    subject?: pulumi.Input<string>;
    /**
     * The subject alternative names.
     */
    subjectAlternativeNames?: pulumi.Input<pulumi.Input<string>[]>;
}
/**
 * The set of arguments for constructing a Certifi resource.
 */
export interface CertifiArgs {
    /**
     * The PEM encoded certificate.
     */
    certificate: pulumi.Input<string>;
    /**
     * The PEM encoded certificate chain.
     */
    certificateChain?: pulumi.Input<string>;
    /**
     * A node name.
     */
    nodeName: pulumi.Input<string>;
    /**
     * Whether to overwrite an existing certificate
     */
    overwrite?: pulumi.Input<boolean>;
    /**
     * The PEM encoded private key.
     */
    privateKey: pulumi.Input<string>;
}
