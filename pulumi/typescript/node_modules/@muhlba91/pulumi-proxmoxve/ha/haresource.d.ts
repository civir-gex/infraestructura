import * as pulumi from "@pulumi/pulumi";
/**
 * Manages Proxmox HA resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@muhlba91/pulumi-proxmoxve";
 *
 * const example = new proxmoxve.ha.HAResource("example", {
 *     resourceId: "vm:123",
 *     state: "started",
 *     group: "example",
 *     comment: "Managed by Terraform",
 * }, {
 *     dependsOn: [proxmox_virtual_environment_hagroup.example],
 * });
 * ```
 *
 * ## Import
 *
 * #!/usr/bin/env sh
 *
 * HA resources can be imported using their identifiers, e.g.:
 *
 * ```sh
 * $ pulumi import proxmoxve:HA/hAResource:HAResource example vm:123
 * ```
 */
export declare class HAResource extends pulumi.CustomResource {
    /**
     * Get an existing HAResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HAResourceState, opts?: pulumi.CustomResourceOptions): HAResource;
    /**
     * Returns true if the given object is an instance of HAResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is HAResource;
    /**
     * The comment associated with this resource.
     */
    readonly comment: pulumi.Output<string | undefined>;
    /**
     * The identifier of the High Availability group this resource is a member of.
     */
    readonly group: pulumi.Output<string | undefined>;
    /**
     * The maximal number of relocation attempts.
     */
    readonly maxRelocate: pulumi.Output<number | undefined>;
    /**
     * The maximal number of restart attempts.
     */
    readonly maxRestart: pulumi.Output<number | undefined>;
    /**
     * The Proxmox HA resource identifier
     */
    readonly resourceId: pulumi.Output<string>;
    /**
     * The desired state of the resource.
     */
    readonly state: pulumi.Output<string>;
    /**
     * The type of HA resources to create. If unset, it will be deduced from the `resourceId`.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a HAResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HAResourceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering HAResource resources.
 */
export interface HAResourceState {
    /**
     * The comment associated with this resource.
     */
    comment?: pulumi.Input<string>;
    /**
     * The identifier of the High Availability group this resource is a member of.
     */
    group?: pulumi.Input<string>;
    /**
     * The maximal number of relocation attempts.
     */
    maxRelocate?: pulumi.Input<number>;
    /**
     * The maximal number of restart attempts.
     */
    maxRestart?: pulumi.Input<number>;
    /**
     * The Proxmox HA resource identifier
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The desired state of the resource.
     */
    state?: pulumi.Input<string>;
    /**
     * The type of HA resources to create. If unset, it will be deduced from the `resourceId`.
     */
    type?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a HAResource resource.
 */
export interface HAResourceArgs {
    /**
     * The comment associated with this resource.
     */
    comment?: pulumi.Input<string>;
    /**
     * The identifier of the High Availability group this resource is a member of.
     */
    group?: pulumi.Input<string>;
    /**
     * The maximal number of relocation attempts.
     */
    maxRelocate?: pulumi.Input<number>;
    /**
     * The maximal number of restart attempts.
     */
    maxRestart?: pulumi.Input<number>;
    /**
     * The Proxmox HA resource identifier
     */
    resourceId: pulumi.Input<string>;
    /**
     * The desired state of the resource.
     */
    state?: pulumi.Input<string>;
    /**
     * The type of HA resources to create. If unset, it will be deduced from the `resourceId`.
     */
    type?: pulumi.Input<string>;
}
