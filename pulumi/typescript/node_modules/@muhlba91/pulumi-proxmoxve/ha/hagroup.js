"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.HAGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a High Availability group in a Proxmox VE cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@muhlba91/pulumi-proxmoxve";
 *
 * const example = new proxmoxve.ha.HAGroup("example", {
 *     group: "example",
 *     comment: "This is a comment.",
 *     nodes: {
 *         node1: undefined,
 *         node2: 2,
 *         node3: 1,
 *     },
 *     restricted: true,
 *     noFailback: false,
 * });
 * ```
 *
 * ## Import
 *
 * #!/usr/bin/env sh
 *
 * HA groups can be imported using their name, e.g.:
 *
 * ```sh
 * $ pulumi import proxmoxve:HA/hAGroup:HAGroup example example
 * ```
 */
class HAGroup extends pulumi.CustomResource {
    /**
     * Get an existing HAGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new HAGroup(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of HAGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HAGroup.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["group"] = state ? state.group : undefined;
            resourceInputs["noFailback"] = state ? state.noFailback : undefined;
            resourceInputs["nodes"] = state ? state.nodes : undefined;
            resourceInputs["restricted"] = state ? state.restricted : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.group === undefined) && !opts.urn) {
                throw new Error("Missing required property 'group'");
            }
            if ((!args || args.nodes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodes'");
            }
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["group"] = args ? args.group : undefined;
            resourceInputs["noFailback"] = args ? args.noFailback : undefined;
            resourceInputs["nodes"] = args ? args.nodes : undefined;
            resourceInputs["restricted"] = args ? args.restricted : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HAGroup.__pulumiType, name, resourceInputs, opts);
    }
}
exports.HAGroup = HAGroup;
/** @internal */
HAGroup.__pulumiType = 'proxmoxve:HA/hAGroup:HAGroup';
//# sourceMappingURL=hagroup.js.map