import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Retrieves information about a specific user group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const operationsTeam = proxmoxve.Permission.getGroup({
 *     groupId: "operations-team",
 * });
 * ```
 */
export declare function getGroup(args: GetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupResult>;
/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupArgs {
    /**
     * The group identifier.
     */
    groupId: string;
}
/**
 * A collection of values returned by getGroup.
 */
export interface GetGroupResult {
    /**
     * The access control list.
     */
    readonly acls: outputs.Permission.GetGroupAcl[];
    /**
     * The group comment.
     */
    readonly comment: string;
    readonly groupId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The group members as a list with `username@realm` entries.
     */
    readonly members: string[];
}
/**
 * Retrieves information about a specific user group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const operationsTeam = proxmoxve.Permission.getGroup({
 *     groupId: "operations-team",
 * });
 * ```
 */
export declare function getGroupOutput(args: GetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupResult>;
/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupOutputArgs {
    /**
     * The group identifier.
     */
    groupId: pulumi.Input<string>;
}
