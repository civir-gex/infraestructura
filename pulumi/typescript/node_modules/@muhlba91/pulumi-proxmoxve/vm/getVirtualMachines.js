"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getVirtualMachinesOutput = exports.getVirtualMachines = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Retrieves information about all VMs in the Proxmox cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const ubuntuVms = proxmoxve.VM.getVirtualMachines({
 *     tags: ["ubuntu"],
 * });
 * const ubuntuTemplates = proxmoxve.VM.getVirtualMachines({
 *     filters: [
 *         {
 *             name: "template",
 *             values: ["true"],
 *         },
 *         {
 *             name: "status",
 *             values: ["stopped"],
 *         },
 *         {
 *             name: "name",
 *             regex: true,
 *             values: ["^ubuntu-20.*$"],
 *         },
 *         {
 *             name: "node_name",
 *             regex: true,
 *             values: [
 *                 "node_us_[1-3]",
 *                 "node_eu_[1-3]",
 *             ],
 *         },
 *     ],
 *     tags: [
 *         "template",
 *         "latest",
 *     ],
 * });
 * ```
 */
function getVirtualMachines(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("proxmoxve:VM/getVirtualMachines:getVirtualMachines", {
        "filters": args.filters,
        "nodeName": args.nodeName,
        "tags": args.tags,
    }, opts);
}
exports.getVirtualMachines = getVirtualMachines;
/**
 * Retrieves information about all VMs in the Proxmox cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const ubuntuVms = proxmoxve.VM.getVirtualMachines({
 *     tags: ["ubuntu"],
 * });
 * const ubuntuTemplates = proxmoxve.VM.getVirtualMachines({
 *     filters: [
 *         {
 *             name: "template",
 *             values: ["true"],
 *         },
 *         {
 *             name: "status",
 *             values: ["stopped"],
 *         },
 *         {
 *             name: "name",
 *             regex: true,
 *             values: ["^ubuntu-20.*$"],
 *         },
 *         {
 *             name: "node_name",
 *             regex: true,
 *             values: [
 *                 "node_us_[1-3]",
 *                 "node_eu_[1-3]",
 *             ],
 *         },
 *     ],
 *     tags: [
 *         "template",
 *         "latest",
 *     ],
 * });
 * ```
 */
function getVirtualMachinesOutput(args, opts) {
    return pulumi.output(args).apply((a) => getVirtualMachines(a, opts));
}
exports.getVirtualMachinesOutput = getVirtualMachinesOutput;
//# sourceMappingURL=getVirtualMachines.js.map