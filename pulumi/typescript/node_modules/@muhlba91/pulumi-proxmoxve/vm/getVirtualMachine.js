"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getVirtualMachineOutput = exports.getVirtualMachine = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Retrieves information about a specific VM.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const testVm = proxmoxve.VM.getVirtualMachine({
 *     nodeName: "test",
 *     vmId: 100,
 * });
 * ```
 */
function getVirtualMachine(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("proxmoxve:VM/getVirtualMachine:getVirtualMachine", {
        "nodeName": args.nodeName,
        "status": args.status,
        "template": args.template,
        "vmId": args.vmId,
    }, opts);
}
exports.getVirtualMachine = getVirtualMachine;
/**
 * Retrieves information about a specific VM.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const testVm = proxmoxve.VM.getVirtualMachine({
 *     nodeName: "test",
 *     vmId: 100,
 * });
 * ```
 */
function getVirtualMachineOutput(args, opts) {
    return pulumi.output(args).apply((a) => getVirtualMachine(a, opts));
}
exports.getVirtualMachineOutput = getVirtualMachineOutput;
//# sourceMappingURL=getVirtualMachine.js.map